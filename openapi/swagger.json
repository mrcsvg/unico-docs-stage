{
  "openapi": "3.0.1",
  "info": {
    "title": "Sign Core API",
    "version": "1.0",  
    "description": "Descrição bacaninha pra colocarmos no swagger"
  },
  "tags": [
    {
    "name": "Gerenciando envelopes",
    "description": "Lorem ipsem envelopes",
    "externalDocs": {
      "description": "Find out more",
      "url": "http://swagger.io"
    }
  },

  {
    "name": "Gerenciando documentos",
    "description": "Lorem ipsem documentos",
    "externalDocs": {
      "description": "Find out more",
      "url": "http://swagger.io"
    }
  },
  {
    "name": "Solicitar assinaturas",
    "description": "Lorem ipsem assinaturas",
    "externalDocs": {
      "description": "Find out more",
      "url": "http://swagger.io"
    }
  },
  {
    "name": "Gerenciando contatos",
    "description": "Lorem ipsem contatos",
    "externalDocs": {
      "description": "Find out more",
      "url": "http://swagger.io"
    }
  }


],
  "paths": {
    "/api/v1/service/envelopes": {
      "post": {
        "tags": [
          "Gerenciando envelopes"
        ],
        "summary": "Obtém envelopes",
        "description": "Para utilizar esta rota é necessário que o usuário tenha permissão de `Visualizar Documentos`\n            <br>Serão obtidos os dados dos envelopes atrelados ao usuário do token utilizado.\n            <br>Nenhum dos filtros é obrigatório. Caso nenhum seja informado, o retorno padrão será \n            a primeira página contendo 30 envelopes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetEnvelopesRequest"
              },
              "examples": {
                "Sem filtros": {
                  "value": {}
                },
                "Filtro por CPF": {
                  "value": {"CPF":"10000000019"}
                },
                "Filtro por CPF e página": {
                  "value": {"CPF":"10000000019","Page":2}
                },
                "Todos os filtros": {
                  "value": {"CPF":"10000000019","EnvelopeUUID":"00000000-0000-0000-0000-000000000000","Page":2,"StartDate":"03/09/2022","EndDate":"04/09/2022","Order":"ASC"}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnvelopesResponse"
                },
                "examples": {
                  "Envelopes encontrados": {
                    "value": {"Success":true,"Message":"","Data":{"Page":1,"MaxPage":5,"Count":50,"Envelopes":[{"CreatedDate":"09/04/2022 21:09","ID_EnvelopeStatus":2,"EnvelopeStatus":"Concluído","UUID":"00000000-0000-0000-0000-000000000000","HasFrame":false,"Documents":[{"Url":"https://sign.unico.io/path","UrlVoucher":"https://sign.unico.io/path","DocumentType":"admissao","CreatedDate":"09/04/2022 21:09","EmitterUserName":"Carlos Eduardo","EmitterUserUUID":"00000000-0000-0000-0000-000000000000","EmitterUserEmail":"test@test.com","CompanySocialName":"unico","UUID":"00000000-0000-0000-0000-000000000000","HasFile":false,"Subscribers":[{"SubscriberName":"Flavia dos Santos","SubscriberCPF":"10000000019","SubscriberEmail":"test@test.com","SubscriberPhone":"551192345678","SubscriberOrder":1,"SubscriberRole":1,"URLFrameFull":"https://unico.io/path","IsUser":false}],"IsTemplate":false,"DocumentSubcategoryUUID":"00000000-0000-0000-0000-000000000000","DocumentSubcategoryName":"Abertura de conta bancária","DocumentCategoryUUID":"00000000-0000-0000-0000-000000000000","DocumentCategoryName":"Admissão"}]}],"Rows":0}}
                  },
                  "Envelopes não encontrados": {
                    "value": {"Success":true,"Message":""}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { },
                "examples": {
                  "CPF informado está inválido": {
                    "value": {"errors":[{"key":"CPF","message":"CPF inválido"}]}
                  },
                  "Identificador de envelope informado está inválido": {
                    "value": {"errors":[{"key":"EnvelopeUUID","message":"EnvelopeUUID inválido"}]}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "Page not found"
              }
            }
          }
        }
      }
    },
    "/api/v1/service/file/{uuidDocument}": {
      "get": {
        "tags": [
          "Gerenciando documentos"
        ],
        "summary": "Obtém arquivo de documento",
        "parameters": [
          {
            "name": "uuidDocument",
            "in": "path",
            "description": "Identificador único do documento",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Arquivo não encontrado",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/ResultJson"
                },
                "example": {"Success":false,"Message":"Falha ao consultar o arquivo do documento.","Data":"Sequence contains no elements"}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultJson"
                },
                "example": {"Success":false,"Message":"Falha ao consultar o arquivo do documento.","Data":"Sequence contains no elements"}
              }
            }
          }
        }
      }
    },
    "/api/v1/service/evidence/{uuidDocument}": {
      "get": {
        "tags": [
          "Gerenciando documentos"
        ],
        "summary": "Obtém arquivo de conjunto de evidências",
        "parameters": [
          {
            "name": "uuidDocument",
            "in": "path",
            "description": "Identificador único do documento",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Arquivo não encontrado",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/ResultJson"
                },
                "example": {"Success":false,"Message":"Falha ao consultar o arquivo de evidência.","Data":"Documento não existe."}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultJson"
                },
                "example": {"Success":false,"Message":"Falha ao consultar o arquivo de evidência.","Data":"Documento não existe."}
              }
            }
          }
        }
      }
    },
    "/api/v1/service/envelope": {
      "post": {
        "tags": [
          "Solicitar assinaturas"
        ],
        "summary": "Cria um envelope, documento e arquivos\r\nRecebe dados em JSON Body",
        "requestBody": {
          "description": "Contém a estrutura para criação do envelope",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashDocumentsJson"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/service/templatedata/{UUID_Document}": {
      "get": {
        "tags": [
          "Gerenciando documentos"
        ],
        "summary": "Obtém os dados digitados pelo usuário no modelo",
        "parameters": [
          {
            "name": "UUID_Document",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "errors",
            "in": "path",
            "required": true,
            "schema": { }
          },
          {
            "name": "Notifications",
            "in": "path",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          },
          {
            "name": "IsValid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/service/cancel": {
      "post": {
        "tags": [
          "Gerenciando envelopes"
        ],
        "summary": "Cancela um envelope",
        "description": "Para utilizar esta rota é necessário que o usuário tenha permissão de `Enviar Documentos`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelEnvelopeRequest"
              },
              "examples": {
                "Sem usuário": {
                  "value": {"EnvelopeUUID":"00000000-0000-0000-0000-000000000000","Reason":"Solicitação de correção"}
                },
                "Com usuário": {
                  "value": {"EnvelopeUUID":"00000000-0000-0000-0000-000000000000","Reason":"Solicitação de correção","UserName":"Augusto"}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelEnvelopeResponse"
                },
                "example": {"Success":true,"Message":"Envelope cancelado com sucesso"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { },
                "examples": {
                  "Envelope com estado diferente de `1 - Pendente`": {
                    "value": {"errors":[{"key":"ID_EnvelopeStatus","message":"Para cancelar um envelope, o mesmo precisa estar no status Pendente."}]}
                  },
                  "Envelope não encontrado": {
                    "value": {"errors":[{"key":"Envelope","message":"Não foi encontrado envelope"}]}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/contact": {
      "post": {
        "tags": [
          "Gerenciando contatos"
        ],
        "summary": "Cria ou Atualiza um contato",
        "description": "Para utilizar esta rota é necessário que o usuário tenha permissão de `Administrar Contatos`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostContactRequest"
              },
              "example": {"ContactName":"Margaria Clara","ContactCPF":"10000000019","ContactEmail":"test@test.com","ContactPhone":"1192345678","ContactIdentifier":"test-123-test"}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostContactResponse"
                },
                "examples": {
                  "Criação": {
                    "value": {"Success":true,"Message":"Contato inserido com sucesso"}
                  },
                  "Atualização": {
                    "value": {"Success":true,"Message":"Contato atualizado com sucesso"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { },
                "examples": {
                  "CPF não fornecido": {
                    "value": {"errors":[{"key":"ContactCPF","message":"CPF nulo ou vazio."}]}
                  },
                  "E-mail inválido": {
                    "value": {"errors":[{"key":"ContactEmail","message":"Email do contato não é válido."}]}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/categories": {
      "get": {
        "tags": [
          "Gerenciando documentos"
        ],
        "summary": "Obtém os dados de categoria e subcategoria de documento por cliente",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/service/documents/{uuidDocument}": {
      "get": {
        "tags": [
          "Gerenciando documentos"
        ],
        "summary": "Detalhes do documento",
        "parameters": [
          {
            "name": "uuidDocument",
            "in": "path",
            "description": "Identificador único do documento",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentDetailResponse"
                },
                "examples": {
                  "Documento de {uuid} encontrado": {
                    "value": {"Url":"https://","UrlVoucher":"https://","DocumentType":"Nome","CreatedDate":"09/04/2022 21:09","EmitterUserName":"Name","EmitterUserEmail":"email@gmail.com","CompanySocialName":"Unico","UUID":"a6828902-70cb-491c-a603-78b39bbb8459","HasFile":false,"Subscribers":[{"SubscriberName":"Flavia dos Santos","SubscriberCPF":"10000000019","SubscriberEmail":"email@gmail.com","SubscriberPhone":"5513987654321","ID_SubscriberStatus":108,"SubscriberOrder":1,"SubscriberEvents":[{"EventName":"NotifiedEmail","EventDescription":"O envelope foi enviado via E-mail","EventDates":["2022-09-03T21:56:08.4386876+00:00"]},{"EventName":"EnvelopeOpened","EventDescription":"O link do envelope foi aberto","EventDates":["2022-09-04T16:56:08.4386883+00:00","2022-09-04T17:56:08.4386885+00:00"]},{"EventName":"DocumentViewed","EventDescription":"O documento foi visualizado","EventDates":["2022-09-04T18:56:08.4386889+00:00","2022-09-04T19:56:08.4386891+00:00","2022-09-04T20:56:08.4386893+00:00"]},{"EventName":"DocumentAccepted","EventDescription":"O documento foi aceito","EventDates":["2022-09-04T21:46:08.4386895+00:00"]},{"EventName":"DocumentFinalized","EventDescription":"O processo de assinatura do signatário foi finalizado","EventDates":["2022-09-04T21:51:08.4386896+00:00"]}]}],"IsTemplate":false,"DocumentSubcategoryUUID":"3af29f56-0b47-4e4c-8019-59e92157b0df","DocumentSubcategoryName":"Abertura de conta bancária","DocumentCategoryUUID":"4be5df28-2cca-4f37-837c-97e251e9e7e5","DocumentCategoryName":"Admissão"}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuditJson": {
        "type": "object",
        "properties": {
          "ID_AuditEvent": {
            "type": "integer",
            "format": "int64"
          },
          "UserName": {
            "type": "string",
            "nullable": true
          },
          "EventDateTime": {
            "type": "string",
            "nullable": true
          },
          "EventData": {
            "type": "string",
            "nullable": true
          },
          "EventDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelEnvelopeRequest": {
        "type": "object",
        "properties": {
          "EnvelopeUUID": {
            "type": "string",
            "description": "Identificador único do envelope",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "Reason": {
            "type": "string",
            "description": "Motivo de cancelamento do envelope"
          },
          "UserName": {
            "type": "string",
            "description": "Nome do usuário que está cancelando\r\n\r\nSe não fornecido será extraído o nome de usuário do token utilizado, e se não encontrado o nome\r\nserá `Integração`",
            "default": "Integração",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelEnvelopeResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "Sinaliza se cancelamento realizado",
            "example": true
          },
          "Message": {
            "type": "string",
            "description": "Mensagem",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashDocumentsJson": {
        "type": "object",
        "properties": {
          "Documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentJson"
            },
            "nullable": true
          },
          "IsFrame": {
            "type": "boolean",
            "nullable": true
          },
          "UrlCallback": {
            "type": "string",
            "nullable": true
          },
          "EnvelopeFlow": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvelopeFlowJson"
            },
            "nullable": true
          },
          "TenantID": {
            "type": "string",
            "nullable": true
          },
          "isAllDocumentsCategorized": {
            "type": "boolean",
            "readOnly": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DocumentJson": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string",
            "nullable": true
          },
          "UrlVoucher": {
            "type": "string",
            "nullable": true
          },
          "DocumentType": {
            "type": "string",
            "nullable": true
          },
          "CreatedDate": {
            "type": "string",
            "nullable": true
          },
          "ID_DocumentStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DocumentStatusName": {
            "type": "string",
            "nullable": true
          },
          "ID_EnvelopeStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "EnvelopeStatusName": {
            "type": "string",
            "nullable": true
          },
          "EmitterUserName": {
            "type": "string",
            "nullable": true
          },
          "EmitterUserUUID": {
            "type": "string",
            "nullable": true
          },
          "EmitterUserEmail": {
            "type": "string",
            "nullable": true
          },
          "CompanySocialName": {
            "type": "string",
            "nullable": true
          },
          "UUID": {
            "type": "string",
            "format": "uuid"
          },
          "FileBase64": {
            "type": "string",
            "nullable": true
          },
          "File": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "HasFile": {
            "type": "boolean"
          },
          "UnitUUID": {
            "type": "string",
            "nullable": true
          },
          "Subscribers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriberJson"
            },
            "nullable": true
          },
          "EnvelopeFlow": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvelopeFlowJson"
            },
            "nullable": true
          },
          "Audit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditJson"
            },
            "nullable": true
          },
          "IsTemplate": {
            "type": "boolean"
          },
          "ID_Template": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "TemplateUUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DocumentSubcategoryUUID": {
            "type": "string",
            "nullable": true
          },
          "DocumentSubcategoryName": {
            "type": "string",
            "nullable": true
          },
          "DocumentCategoryUUID": {
            "type": "string",
            "nullable": true
          },
          "DocumentCategoryName": {
            "type": "string",
            "nullable": true
          },
          "TemplateFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateFieldEnvelopeJson"
            },
            "nullable": true
          },
          "HasTemplateFields": {
            "type": "boolean",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EnvelopeFlowJson": {
        "type": "object",
        "properties": {
          "ID_Flow": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "EnvelopeStatusEnum": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "Estado do envelope, que pode ser:\r\n* `0` - Expirado\r\n* `1` - Pendente\r\n* `2` - Concluído\r\n* `3` - Cancelado\r\n* `4` - Processando\r\n* `5` - Recusado",
        "format": "int32"
      },
      "GetDocumentDetailResponse": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string",
            "description": "Link para download do arquivo",
            "format": "uri"
          },
          "UrlVoucher": {
            "type": "string",
            "description": "Link para download do voucher\r\n* Disponível apenas quando envelope está no estado `2 - Conclúido` ou `3 - Cancelado`",
            "format": "uri",
            "nullable": true
          },
          "DocumentType": {
            "type": "string",
            "description": "Nome do arquivo\r\n* sem extensão",
            "example": "contrato-de-locacao"
          },
          "CreatedDate": {
            "type": "string",
            "description": "Data de criação do documento\r\n* Formato `dd/MM/yyyy HH:MM`",
            "format": "date-time",
            "example": "07/15/2022 21:07"
          },
          "EmitterUserName": {
            "type": "string",
            "description": "Nome da pessoa que emitiu o documento",
            "example": "Renata Alcantara"
          },
          "EmitterUserUUID": {
            "type": "string",
            "description": "Identificador único da pessoa emissora\r\n* Formato UUID",
            "nullable": true,
            "example": "dad4bfa9-a993-492d-953e-d412d2d185f3"
          },
          "EmitterUserEmail": {
            "type": "string",
            "description": "E-mail da pessoa que emitiu o documento",
            "format": "email",
            "nullable": true,
            "example": "renata.alcantara@unico.io"
          },
          "CompanySocialName": {
            "type": "string",
            "description": "Nome da empresa que emitiu o documento",
            "nullable": true,
            "example": "unico"
          },
          "UUID": {
            "type": "string",
            "description": "Identificador único do documento",
            "format": "uuid",
            "example": "dad4bfa9-a993-492d-953e-d412d2d185f3"
          },
          "HasFile": {
            "type": "boolean",
            "description": "Indica se arquivo está disponível na resposta",
            "example": false
          },
          "Subscribers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDocumentDetailResponse_Subscriber"
            },
            "description": "Lista de assinantes"
          },
          "IsTemplate": {
            "type": "boolean",
            "description": "Indica se o documento é baseado em modelo",
            "example": false
          },
          "DocumentSubcategoryUUID": {
            "type": "string",
            "description": "Identificador único da subcategoria do documento (tipo de documento)",
            "format": "uuid",
            "nullable": true,
            "example": "dad4bfa9-a993-492d-953e-d412d2d185f3"
          },
          "DocumentSubcategoryName": {
            "type": "string",
            "description": "Nome da da subcategoria do documento (tipo de documento)",
            "nullable": true
          },
          "DocumentCategoryUUID": {
            "type": "string",
            "description": "Identificador único da categoria do documento",
            "format": "uuid",
            "nullable": true,
            "example": "dad4bfa9-a993-492d-953e-d412d2d185f3"
          },
          "DocumentCategoryName": {
            "type": "string",
            "description": "Nome da da categoria do documento",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Modelo de resposta para o endpoint [GET] /api/v1/service/documents/{uuidDocument}"
      },
      "GetDocumentDetailResponse_Subscriber": {
        "type": "object",
        "properties": {
          "SubscriberName": {
            "type": "string",
            "description": "Nome do assinante",
            "example": "Flavia dos Santos"
          },
          "SubscriberCPF": {
            "type": "string",
            "description": "CPF do assinante",
            "nullable": true,
            "example": "10000000019"
          },
          "SubscriberEmail": {
            "type": "string",
            "description": "E-mail do assinante",
            "format": "email",
            "nullable": true,
            "example": "email@gmail.com"
          },
          "SubscriberPhone": {
            "type": "string",
            "description": "Telefone celular do assinante",
            "format": "tel",
            "nullable": true,
            "example": "5513987654321"
          },
          "SubscriberUUID": {
            "type": "string",
            "description": "Identificador único do assinante",
            "example": "dad4bfa9-a993-492d-953e-d412d2d185f3"
          },
          "ID_SubscriberStatus": {
            "type": "integer",
            "description": "ID que representa o status do assinante em relação ao documento.",
            "format": "int32",
            "example": 1
          },
          "SubscriberOrder": {
            "type": "integer",
            "description": "Ordem de assinatura do assinante em relação aos outros assinantes do documento",
            "format": "int32",
            "example": 1
          },
          "SubscriberEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscriber_SubscriberEvent"
            },
            "description": "Lista de eventos do assinante",
            "nullable": true
          },
          "EmailNotification": {
            "type": "string",
            "description": "Email do assinante no qual receberá notificações referentes ao envelope",
            "format": "email",
            "nullable": true,
            "example": "email@gmail.com"
          }
        },
        "additionalProperties": false
      },
      "GetEnvelopesRequest": {
        "type": "object",
        "properties": {
          "CPF": {
            "maxLength": 11,
            "minLength": 11,
            "pattern": "^[0-9]{11}$",
            "type": "string",
            "description": "Número de cadastro de pessoa física do assinante\r\n            \r\nSe fornecido valor para `EnvelopeUUID` o valor de `CPF` será ignorado\r\n* sem formatação, apenas os 11 números",
            "default": null,
            "nullable": true,
            "example": "10000000019"
          },
          "EnvelopeUUID": {
            "type": "string",
            "description": "Identificador único do envelope",
            "format": "uuid",
            "default": null,
            "nullable": true,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "Status": {
            "$ref": "#/components/schemas/EnvelopeStatusEnum"
          },
          "Page": {
            "type": "integer",
            "description": "Número da página da busca",
            "format": "int32",
            "default": 1,
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Data inicial para busca sob a data de criação do envelope\r\n* Se esta data for definida, também deve ser definida a data em `EndDate`\r\n* A data deve ser após 01/01/2018\r\n* A data deve ser anterior a data definida em `EndDate`",
            "format": "date",
            "nullable": true,
            "example": "04/04/2020"
          },
          "EndDate": {
            "type": "string",
            "description": "Data final para busca sob a data de criação do envelope\r\n* Se esta data for definida, também deve ser definida a data em `StartDate`\r\n* A data deve ser após 01/01/2018",
            "format": "date",
            "nullable": true,
            "example": "10/04/2020"
          },
          "Order": {
            "$ref": "#/components/schemas/Orders"
          }
        },
        "additionalProperties": false,
        "description": "Parâmetros de filtragem para realizar busca de envelopes\r\n* Nenhuma propriedade é obrigatória"
      },
      "GetEnvelopesResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "Sinaliza se foram encontrados registros",
            "example": true
          },
          "Message": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "Data": {
            "$ref": "#/components/schemas/GetEnvelopesResponse_EnvelopePage"
          }
        },
        "additionalProperties": false
      },
      "GetEnvelopesResponse_Document": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string",
            "description": "Link para download do arquivo",
            "format": "uri"
          },
          "UrlVoucher": {
            "type": "string",
            "description": "Link para download do voucher\r\n* Disponível apenas quando envelope no estado `2 - Concluído` ou `3 - Cancelado`",
            "format": "uri"
          },
          "DocumentType": {
            "type": "string",
            "description": "Nome do arquivo\r\n* sem extensão",
            "example": "contrato-de-locacao"
          },
          "CreatedDate": {
            "type": "string",
            "description": "Data de criação do documento\r\n* Formato `dd/MM/yyyy HH:MM`",
            "format": "date",
            "example": "07/15/2022 21:07"
          },
          "EmitterUserName": {
            "type": "string",
            "description": "Nome da pessoa que emitiu o documento",
            "example": "Renata Alcantara"
          },
          "EmitterUserUUID": {
            "type": "string",
            "description": "Identificador único da pessoa emissora",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "EmitterUserEmail": {
            "type": "string",
            "description": "E-mail da pessoa que emitiu o documento",
            "format": "email",
            "nullable": true,
            "example": "test@test.com"
          },
          "CompanySocialName": {
            "type": "string",
            "description": "Nome da empresa que emitiu o documento",
            "example": "unico"
          },
          "UUID": {
            "type": "string",
            "description": "Identificador único do documento",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "HasFile": {
            "type": "boolean",
            "description": "Indica se arquivo está disponível na resposta",
            "example": false
          },
          "Subscribers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetEnvelopesResponse_Subscriber"
            },
            "description": "Lista de assinantes"
          },
          "IsTemplate": {
            "type": "boolean",
            "description": "Indica se o documento é baseado em modelo",
            "example": false,
            "deprecated": true
          },
          "DocumentSubcategoryUUID": {
            "type": "string",
            "description": "Identificador único do tipo do documento",
            "format": "uuid",
            "nullable": true,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "DocumentSubcategoryName": {
            "type": "string",
            "description": "Nome do tipo do documento",
            "nullable": true,
            "example": "Admissão"
          },
          "DocumentCategoryUUID": {
            "type": "string",
            "description": "Identificador único da categoria do documento",
            "format": "uuid",
            "nullable": true,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "DocumentCategoryName": {
            "type": "string",
            "description": "Nome da categoria do documento",
            "nullable": true,
            "example": "Abertura de conta bancária"
          }
        },
        "additionalProperties": false
      },
      "GetEnvelopesResponse_Envelope": {
        "type": "object",
        "properties": {
          "CreatedDate": {
            "type": "string",
            "description": "Data de criação do envelope\r\n* Formato `dd/MM/yyyy HH:MM`",
            "format": "date",
            "example": "07/15/2022 21:07"
          },
          "ID_EnvelopeStatus": {
            "$ref": "#/components/schemas/EnvelopeStatusEnum"
          },
          "EnvelopeStatus": {
            "type": "string",
            "description": "Descrição do ID_EnvelopeStatus",
            "example": "Concluído"
          },
          "UUID": {
            "type": "string",
            "description": "Identificador único do envelope",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "HasFrame": {
            "type": "boolean",
            "description": "Indica se o envelope criado é um Frame\r\n* Frame possibilita o não envio de notificação ao assinate\r\n* Frame possibilita a inclusão do WebClient em plataforma/aplicação proprietária do cliente",
            "example": false
          },
          "Documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetEnvelopesResponse_Document"
            },
            "description": "Lista de documentos"
          }
        },
        "additionalProperties": false
      },
      "GetEnvelopesResponse_EnvelopePage": {
        "type": "object",
        "properties": {
          "Page": {
            "type": "integer",
            "description": "Número da página da busca",
            "format": "int32",
            "example": 1
          },
          "MaxPage": {
            "type": "integer",
            "description": "Número máximo de páginas disponíveis",
            "format": "int64",
            "example": 5
          },
          "Count": {
            "type": "integer",
            "description": "Quantidade total de envelopes encontrados",
            "format": "int64",
            "example": 50
          },
          "Envelopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetEnvelopesResponse_Envelope"
            },
            "description": "Lista de envelopes"
          },
          "Rows": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "GetEnvelopesResponse_Subscriber": {
        "type": "object",
        "properties": {
          "SubscriberName": {
            "type": "string",
            "description": "Nome do assinante",
            "example": "Renata Alcantara"
          },
          "SubscriberCPF": {
            "maximum": 11,
            "minimum": 11,
            "pattern": "^[0-9]{11}$",
            "type": "string",
            "description": "Número de cadastro de pessoa física do assinante\r\n* sem formatação, apenas os 11 números",
            "example": "10000000019"
          },
          "SubscriberEmail": {
            "type": "string",
            "description": "E-mail do assinante",
            "format": "email",
            "example": "test@test.com"
          },
          "SubscriberPhone": {
            "type": "string",
            "description": "Telefone do assinante com código do país e DDD\r\n* Sem formatação e contendo apenas 12 ou 13 números",
            "format": "tel",
            "nullable": true,
            "example": "551192345678"
          },
          "ID_SubscriberStatus": {
            "$ref": "#/components/schemas/SubscriberStatus"
          },
          "SubscriberOrder": {
            "type": "integer",
            "description": "Ordem de assinatura do assinante",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "SubscriberRole": {
            "$ref": "#/components/schemas/SubscriberRoles"
          },
          "URLFrameFull": {
            "type": "string",
            "description": "Link para acessar página de assinatura\r\n* O link possui data de expiração de acordo com as definições da empresa emissora",
            "format": "uri"
          },
          "IsUser": {
            "type": "boolean",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "Notification": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Orders": {
        "enum": [
          "ASC",
          "DESC"
        ],
        "type": "string",
        "description": "Ordenação dos elementos da lista, que pode ser:\r\n* `ASC` - Crescente\r\n* `DESC` - Decrescente"
      },
      "PostContactRequest": {
        "type": "object",
        "properties": {
          "ContactName": {
            "type": "string",
            "description": "Nome do assinante",
            "example": "Margaria Clara"
          },
          "ContactCPF": {
            "type": "string",
            "description": "Número de cadastro de pessoa física do assinante\r\n* sem formatação, apenas os 11 números\r\n            \r\nNão é possível atualizar CPF de algum assinante existente. Sendo assim, caso seja fornecido\r\num novo CPF haverá o registro de um novo assinante",
            "example": "10000000019"
          },
          "ContactEmail": {
            "type": "string",
            "description": "E-mail da assinante",
            "format": "email",
            "nullable": true,
            "example": "test@test.com"
          },
          "ContactPhone": {
            "type": "string",
            "description": "Telefone do assinante com DDD\r\n* Sem formatação e contendo apenas 10 ou 11 números",
            "format": "tel",
            "nullable": true,
            "example": "1192345678"
          },
          "ContactIdentifier": {
            "type": "string",
            "description": "Campo livre, não único, para identificação do contato do lado do cliente",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostContactResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "Sinaliza se criação ou atualização realizado",
            "example": true
          },
          "Message": {
            "type": "string",
            "description": "Mensagem",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResultJson": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean"
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriberAccessJson": {
        "type": "object",
        "properties": {
          "ID_Event": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AccessDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "AccessSource": {
            "type": "string",
            "nullable": true
          },
          "EventDateTime": {
            "type": "string",
            "nullable": true
          },
          "GeoLocation": {
            "type": "string",
            "nullable": true
          },
          "GeoFormattedAddress": {
            "type": "string",
            "nullable": true
          },
          "IP": {
            "type": "string",
            "nullable": true
          },
          "LogicalPort": {
            "type": "string",
            "nullable": true
          },
          "UserGMT": {
            "type": "string",
            "nullable": true
          },
          "UserAgent": {
            "type": "string",
            "nullable": true
          },
          "UserUUID": {
            "type": "string",
            "nullable": true
          },
          "UserCPF": {
            "type": "string",
            "nullable": true
          },
          "JTI": {
            "type": "string",
            "nullable": true
          },
          "EventData": {
            "type": "string",
            "nullable": true
          },
          "EventDescription": {
            "type": "string",
            "nullable": true
          },
          "GeoLat": {
            "type": "string",
            "nullable": true
          },
          "GeoLong": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriberJson": {
        "type": "object",
        "properties": {
          "ID_Subscriber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "SubscriberName": {
            "type": "string",
            "nullable": true
          },
          "SubscriberCPF": {
            "type": "string",
            "nullable": true
          },
          "SubscriberEmail": {
            "type": "string",
            "nullable": true
          },
          "SubscriberPhone": {
            "type": "string",
            "nullable": true
          },
          "SubscriberUUID": {
            "type": "string",
            "nullable": true
          },
          "AuthCode": {
            "type": "string",
            "nullable": true
          },
          "ID_SubscriberStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SubscriberStatus": {
            "type": "string",
            "nullable": true
          },
          "SubscriberOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SubscriberRole": {
            "type": "integer",
            "format": "int32"
          },
          "SubscriberOrganization": {
            "type": "string",
            "nullable": true
          },
          "SubscriberAccess": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriberAccessJson"
            },
            "nullable": true
          },
          "URLFrame": {
            "type": "string",
            "nullable": true
          },
          "URLFrameFull": {
            "type": "string",
            "nullable": true
          },
          "SignatureImage": {
            "type": "string",
            "nullable": true
          },
          "EmailNotification": {
            "type": "string",
            "nullable": true
          },
          "IsUser": {
            "type": "boolean",
            "nullable": true
          },
          "IsLast": {
            "type": "boolean",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SubscriberRoles": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "Função do assinante, que pode ser:\r\n* `1` - Própria\r\n* `2` - Representante legal\r\n* `3` - Testemunha",
        "format": "int32"
      },
      "SubscriberStatus": {
        "enum": [
          102,
          108,
          112,
          118,
          119,
          120,
          121
        ],
        "type": "integer",
        "description": "Estado do assinante, que pode ser:\r\n* `102` - Processando\r\n* `108` - Assinado\r\n* `112` - Recusado\r\n* `118` - Erro\r\n* `119` - Criado\r\n* `120` - Notificação para Meu ID não enviada\r\n* `121` - Concluído",
        "format": "int32"
      },
      "Subscriber_SubscriberEvent": {
        "type": "object",
        "properties": {
          "EventName": {
            "type": "string",
            "description": "Nome do evento de acesso do assinante em relação ao documento\r\n* `NotifiedEmail` - Assinante foi notificado via email\r\n* `NotifiedSMS` - Assinante foi notificado via SMS\r\n* `NotifiedPush` - Assinante foi notificado via Push(You)\r\n* `EnvelopeOpened` - Assinante abriu o envelope\r\n* `DocumentViewed` - Assinante visualizou o documento\r\n* `DocumentAccepted` - Assinante aceitou o documento\r\n* `DocumentRefused` - Assinante recusou o documento\r\n* `DocumentFinalized` - Assinante concluiu a assinatura do documento e ele foi processado.",
            "example": "DocumentViewed"
          },
          "EventDescription": {
            "type": "string",
            "description": "Breve descrição do evento",
            "example": "O envelope foi enviado via E-mail"
          },
          "EventDates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Lista de dadas de ocorrências do evento em UTC",
            "format": "date-time",
            "example": [
              "2022-08-03T13:00:18.553",
              "2022-08-03T13:04:00.037",
              "2022-08-03T13:20:39.093"
            ]
          }
        },
        "additionalProperties": false
      },
      "TemplateFieldEnvelopeJson": {
        "type": "object",
        "properties": {
          "FieldCode": {
            "type": "string",
            "nullable": true
          },
          "FieldValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Coloque **apenas** seu token de serviço JWT abaixo!",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}